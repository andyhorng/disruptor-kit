// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var Reader,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Reader = (function() {
    function Reader(read, written, upstream, consumer) {
      this.read = read;
      this.written = written;
      this.upstream = upstream;
      this.consumer = consumer;
      this.receive = __bind(this.receive, this);
      this.stop = __bind(this.stop, this);
      this.start = __bind(this.start, this);
      this.ready = false;
    }

    Reader.prototype.start = function() {
      this.ready = true;
      return this.recieve();
    };

    Reader.prototype.stop = function() {
      return this.ready = false;
    };

    Reader.prototype.receive = function() {
      var gating, idling, previous, read;
      previous = this.read.load();
      idling = 0;
      gating = 0;
      read = function() {
        var lower, upper;
        lower = previous + 1;
        upper = this.upstream.read(lower);
        if (lower <= upper) {
          this.consumer.consume(lower, upper);
          this.read.store(upper);
          previous = upper;
        } else if (lower <= (upper = this.written.load())) {
          gating += 1;
          idling = 0;
        } else if (this.ready) {
          idling += 1;
          gating = 0;
        }
        return setTimeout(read, 0);
      };
      return setTimeout(read, 0);
    };

    return Reader;

  })();

  module.exports = Reader;

}).call(this);
